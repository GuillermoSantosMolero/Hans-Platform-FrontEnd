{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\admin\\\\AdminView.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Collapse from '@mui/material/Collapse';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AdminLogin from './AdminLogin.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminView(_ref) {\n  _s();\n  let {} = _ref;\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [status, setStatus] = useState(null);\n  useEffect(() => {\n    let ignore = false;\n    if (question.status === QuestionStatus.Loading) {\n      fetch(`/api/question/${question.id}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            if (!ignore) {\n              setQuestion({\n                status: QuestionStatus.Loaded,\n                id: data.id,\n                prompt: data.prompt,\n                answers: data.answers,\n                image: `/api/question/${data.id}/image`\n              });\n              sessionRef.current.publishControl({\n                type: 'ready'\n              });\n            }\n          });\n        } else {\n          res.text().then(msg => console.log(msg));\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(AdminLogin, {\n      username: username,\n      password: password,\n      status: status,\n      onJoinSession: joinSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminView, \"Douy/pyhBbOsbNlq1OAjv6mE550=\");\n_c = AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useState","Button","TextField","Box","Typography","Container","Collapse","Alert","AlertTitle","IconButton","CloseIcon","AdminLogin","AdminView","username","setUsername","password","setPassword","status","setStatus","useEffect","ignore","question","QuestionStatus","Loading","fetch","id","method","headers","then","res","json","data","setQuestion","Loaded","prompt","answers","image","sessionRef","current","publishControl","type","text","msg","console","log","catch","error","joinSession"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/admin/AdminView.jsx"],"sourcesContent":["import { React, useState } from \"react\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport AdminLogin from './AdminLogin.jsx';\r\n\r\nexport default function AdminView({}) {\r\n  const [username, setUsername] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    let ignore = false;\r\n    if (question.status === QuestionStatus.Loading) {\r\n      fetch(\r\n        `/api/question/${question.id}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n        }\r\n      ).then(res => {\r\n        if (res.status === 200) {\r\n          res.json().then(data => {\r\n            if (!ignore) {\r\n              setQuestion({\r\n                status: QuestionStatus.Loaded,\r\n                id: data.id,\r\n                prompt: data.prompt,\r\n                answers: data.answers,\r\n                image: `/api/question/${data.id}/image`,\r\n              });\r\n              sessionRef.current.publishControl({ type: 'ready' });\r\n            }\r\n          });\r\n        } else {\r\n          res.text().then(msg => console.log(msg));\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n    return () => { ignore = true };\r\n  }, [question]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <AdminLogin\r\n            username={username}\r\n            password={password}\r\n            status={status}\r\n            onJoinSession={joinSession}\r\n        />\r\n\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,OAAOC,UAAU,MAAM,kBAAkB;AAAC;AAE1C,eAAe,SAASC,SAAS,OAAK;EAAA;EAAA,IAAJ,CAAC,CAAC;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE1CmB,SAAS,CAAC,MAAM;IACd,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,QAAQ,CAACJ,MAAM,KAAKK,cAAc,CAACC,OAAO,EAAE;MAC9CC,KAAK,CACF,iBAAgBH,QAAQ,CAACI,EAAG,EAAC,EAC9B;QACEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CACF,CAACC,IAAI,CAACC,GAAG,IAAI;QACZ,IAAIA,GAAG,CAACZ,MAAM,KAAK,GAAG,EAAE;UACtBY,GAAG,CAACC,IAAI,EAAE,CAACF,IAAI,CAACG,IAAI,IAAI;YACtB,IAAI,CAACX,MAAM,EAAE;cACXY,WAAW,CAAC;gBACVf,MAAM,EAAEK,cAAc,CAACW,MAAM;gBAC7BR,EAAE,EAAEM,IAAI,CAACN,EAAE;gBACXS,MAAM,EAAEH,IAAI,CAACG,MAAM;gBACnBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;gBACrBC,KAAK,EAAG,iBAAgBL,IAAI,CAACN,EAAG;cAClC,CAAC,CAAC;cACFY,UAAU,CAACC,OAAO,CAACC,cAAc,CAAC;gBAAEC,IAAI,EAAE;cAAQ,CAAC,CAAC;YACtD;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLX,GAAG,CAACY,IAAI,EAAE,CAACb,IAAI,CAACc,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC,CAACG,KAAK,CAACC,KAAK,IAAI;QAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ;IACA,OAAO,MAAM;MAAE1B,MAAM,GAAG,IAAI;IAAC,CAAC;EAChC,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EACd,oBACE,QAAC,SAAS;IAAC,SAAS,EAAC,MAAM;IAAC,QAAQ,EAAC,IAAI;IAAA,uBACrC,QAAC,UAAU;MACP,QAAQ,EAAER,QAAS;MACnB,QAAQ,EAAEE,QAAS;MACnB,MAAM,EAAEE,MAAO;MACf,aAAa,EAAE8B;IAAY;MAAA;MAAA;MAAA;IAAA;EAC7B;IAAA;IAAA;IAAA;EAAA,QAEM;AAEhB;AAAC,GAlDuBnC,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}