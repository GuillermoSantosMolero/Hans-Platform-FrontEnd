{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\admin\\\\AdminInterface.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState, useRef } from \"react\";\nimport './AdminInterface.css';\nimport { Session, SessionStatus } from '../../context/Session';\nimport { QuestionStatus } from '../../context/Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminInterface(_ref) {\n  _s();\n  let {\n    username,\n    password,\n    questions,\n    sessions\n  } = _ref;\n  const [selectedSession, setSelectedSession] = useState({\n    id: \"0\",\n    duration: 0,\n    question_id: \"\",\n    status: \"\"\n  });\n  const sessionRef = useRef(null);\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Joining);\n  const [question, setQuestion] = useState({\n    status: QuestionStatus.Undefined\n  });\n  useEffect(() => {\n    if (sessions) {\n      setSelectedSession(sessions[0]);\n      if (questions) setSelectedSession({\n        ...selectedSession,\n        question_id: questions[0].id\n      });\n    }\n  }, [sessions], [questions]);\n  useEffect(() => {\n    sessionRef.current = new Session(selectedSession.id, 0, controlMessage => {\n      switch (controlMessage.type) {\n        case 'ready':\n          {\n            break;\n          }\n        default:\n          break;\n      }\n    }, null /*AquÃ­ podriamos controlar las respuestas de los usuarios */);\n  }, [selectedSession]);\n  const handleSessionChange = event => {\n    const sessionId = parseInt(event.target.value);\n    const session = sessions.find(s => s.id === sessionId);\n    session.question_id = selectedSession.question_id;\n    session.duration = selectedSession.duration;\n    setSelectedSession(session);\n  };\n  const handleQuestionChange = event => {\n    setSelectedSession({\n      ...selectedSession,\n      question_id: event.target.value\n    });\n  };\n  const createSession = event => {\n    fetch(`/api/createSession`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        pass: password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(data => {\n          sessions = data;\n        });\n      } else {\n        res.text().then(msg => console.log(msg));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessionlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSessionChange,\n        children: sessions && sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: session.id,\n          children: [\"Session \", session.id]\n        }, session.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessiondetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Valor de sessions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(selectedSession, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: selectedSession && selectedSession.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedSession && selectedSession.duration,\n        onChange: e => setSelectedSession({\n          ...selectedSession,\n          duration: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleQuestionChange,\n        children: questions && questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: question.id,\n          children: question.prompt\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startsession\",\n      onClick: createSession,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminInterface, \"Pe2ntR4VtWYE2of3ZOk1RG9O+UA=\");\n_c = AdminInterface;\nvar _c;\n$RefreshReg$(_c, \"AdminInterface\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Session","SessionStatus","QuestionStatus","AdminInterface","username","password","questions","sessions","selectedSession","setSelectedSession","id","duration","question_id","status","sessionRef","sessionStatus","setSessionStatus","Joining","question","setQuestion","Undefined","current","controlMessage","type","handleSessionChange","event","sessionId","parseInt","target","value","session","find","s","handleQuestionChange","createSession","fetch","method","headers","body","JSON","stringify","user","pass","then","res","json","data","text","msg","console","log","catch","error","map","e","prompt"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/admin/AdminInterface.jsx"],"sourcesContent":["import { React, useEffect, useState, useRef } from \"react\";\r\n\r\nimport './AdminInterface.css';\r\nimport { Session, SessionStatus } from '../../context/Session';\r\nimport { QuestionStatus } from '../../context/Question';\r\n\r\nexport default function AdminInterface({username, password, questions, sessions }) {\r\n  const [selectedSession, setSelectedSession] = useState({ id: \"0\", duration: 0, question_id: \"\", status: \"\" });\r\n  const sessionRef = useRef(null);\r\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Joining);\r\n  const [question, setQuestion] = useState({ status: QuestionStatus.Undefined });\r\n\r\n  useEffect(() => {\r\n    if(sessions){\r\n      setSelectedSession(sessions[0]);\r\n      if(questions)\r\n        setSelectedSession({ ...selectedSession, question_id: questions[0].id})\r\n    }\r\n  },[sessions],[questions]);\r\n  useEffect(() => {\r\n    sessionRef.current = new Session(selectedSession.id, 0,\r\n      (controlMessage) => {\r\n        switch (controlMessage.type) {\r\n          case 'ready': {\r\n            \r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n      }, null /*AquÃ­ podriamos controlar las respuestas de los usuarios */\r\n      );\r\n  }, [selectedSession]);\r\n\r\n  const handleSessionChange = (event) => {\r\n    const sessionId = parseInt(event.target.value);\r\n    const session = sessions.find(s => s.id === sessionId);\r\n    session.question_id = selectedSession.question_id;\r\n    session.duration = selectedSession.duration;\r\n    setSelectedSession(session);\r\n  }\r\n  const handleQuestionChange = (event) => {\r\n    setSelectedSession({ ...selectedSession, question_id: event.target.value});\r\n  }\r\n  const createSession = (event) => {\r\n    fetch(\r\n      `/api/createSession`,\r\n      {\r\n          method: 'POST',\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(\r\n              {\r\n                  user: username,\r\n                  pass: password\r\n              }\r\n          )\r\n      }\r\n  ).then(res => {\r\n      if (res.status === 200) {\r\n          res.json().then(data => {\r\n              sessions=data;\r\n          });\r\n      } else {\r\n          res.text().then(msg => console.log(msg));\r\n      }\r\n  }).catch(error => {\r\n      console.log(error);\r\n  });\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"sessionlist\">\r\n\r\n        <select onChange={handleSessionChange}>\r\n          {sessions && sessions.map(session => (\r\n            <option key={session.id} value={session.id}>Session {session.id}</option>\r\n          ))}\r\n        </select>\r\n        <button>New Session</button>\r\n      </div>\r\n      <div className=\"sessiondetails\">\r\n        <div>\r\n          <p>Valor de sessions:</p>\r\n          <pre>{JSON.stringify(selectedSession, null, 2)}</pre>\r\n        </div>\r\n        <label>Id:</label>\r\n        <input type=\"text\" readOnly value={selectedSession && selectedSession.id} />\r\n        <label>Duration:</label>\r\n        <input type=\"text\" value={selectedSession && selectedSession.duration} onChange={e => setSelectedSession({ ...selectedSession, duration: e.target.value})}/>\r\n        <label>Question:</label>\r\n        <select onChange={handleQuestionChange}>\r\n          {questions && questions.map(question => (\r\n            <option key={question.id} value={question.id}>{question.prompt}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"startsession\" onClick={createSession}>\r\n        <button>Start</button>\r\n        <input type=\"text\" readOnly />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}