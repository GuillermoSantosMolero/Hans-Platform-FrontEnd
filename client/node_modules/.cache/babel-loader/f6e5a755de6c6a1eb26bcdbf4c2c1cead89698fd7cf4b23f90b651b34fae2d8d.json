{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\session\\\\QuestionDetails.jsx\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Countdown from './Countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionDetails(_ref) {\n  _s();\n  let {\n    image,\n    timeInSecs\n  } = _ref;\n  const Ref = useRef(null);\n  // The state for our timer\n  const [timer, setTimer] = useState('00:00:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to \n      // add '0' at the beginning of the variable\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next    \n    setTimer('00:00:10');\n\n    // If you try to remove this line the \n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if \n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"question 1\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h4\",\n      variant: \"h6\",\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Question 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionDetails, \"HPeaHJ9UVwlp0EkypzcTPI/d1Lw=\");\n_c = QuestionDetails;\nvar _c;\n$RefreshReg$(_c, \"QuestionDetails\");","map":{"version":3,"names":["React","Box","Typography","Countdown","QuestionDetails","image","timeInSecs","Ref","useRef","timer","setTimer","useState","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","useEffect","display","flexDirection"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/session/QuestionDetails.jsx"],"sourcesContent":["import { React } from \"react\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Countdown from './Countdown';\r\nexport default function QuestionDetails({ image, timeInSecs }) {\r\n  const Ref = useRef(null);\r\n  // The state for our timer\r\n  const [timer, setTimer] = useState('00:00:00');\r\n  \r\n  const getTimeRemaining = (e) => {\r\n      const total = Date.parse(e) - Date.parse(new Date());\r\n      const seconds = Math.floor((total / 1000) % 60);\r\n      const minutes = Math.floor((total / 1000 / 60) % 60);\r\n      const hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n      return {\r\n          total, hours, minutes, seconds\r\n      };\r\n  }\r\n\r\n\r\n  const startTimer = (e) => {\r\n      let { total, hours, minutes, seconds } \r\n                  = getTimeRemaining(e);\r\n      if (total >= 0) {\r\n\r\n          // update the timer\r\n          // check if less than 10 then we need to \r\n          // add '0' at the beginning of the variable\r\n          setTimer(\r\n              (hours > 9 ? hours : '0' + hours) + ':' +\r\n              (minutes > 9 ? minutes : '0' + minutes) + ':'\r\n              + (seconds > 9 ? seconds : '0' + seconds)\r\n          )\r\n      }\r\n  }\r\n\r\n\r\n  const clearTimer = (e) => {\r\n\r\n      // If you adjust it you should also need to\r\n      // adjust the Endtime formula we are about\r\n      // to code next    \r\n      setTimer('00:00:10');\r\n\r\n      // If you try to remove this line the \r\n      // updating of timer Variable will be\r\n      // after 1000ms or 1sec\r\n      if (Ref.current) clearInterval(Ref.current);\r\n      const id = setInterval(() => {\r\n          startTimer(e);\r\n      }, 1000)\r\n      Ref.current = id;\r\n  }\r\n\r\n  const getDeadTime = () => {\r\n      let deadline = new Date();\r\n\r\n      // This is where you need to adjust if \r\n      // you entend to add more time\r\n      deadline.setSeconds(deadline.getSeconds() + 10);\r\n      return deadline;\r\n  }\r\n\r\n  // We can use useEffect so that when the component\r\n  // mount the timer will start as soon as possible\r\n\r\n  // We put empty array to act as componentDid\r\n  // mount only\r\n  useEffect(() => {\r\n      clearTimer(getDeadTime());\r\n  }, []);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt=\"question 1\"\r\n        width=\"100%\"\r\n      />\r\n      <Typography component=\"h4\" variant=\"h6\" textAlign='center'>\r\n        <b>Question 1</b>\r\n      </Typography>\r\n      \r\n      <h2>{timer}</h2>\r\n    </Box>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}