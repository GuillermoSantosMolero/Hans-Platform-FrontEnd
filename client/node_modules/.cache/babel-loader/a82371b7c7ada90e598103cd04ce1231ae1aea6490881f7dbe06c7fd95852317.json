{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\session\\\\Countdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountDown = _ref => {\n  _s();\n  let {\n    targetDate\n  } = _ref;\n  const [countdown, setCountdown] = useState(calculateCountdown(targetDate));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCountdown(calculateCountdown(targetDate));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [targetDate]);\n  function calculateCountdown(targetDate) {\n    const difference = +new Date(targetDate) - +new Date();\n    let timeLeft = {};\n    if (difference > 0) {\n      timeLeft = {\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n    return timeLeft;\n  }\n  const {\n    minutes,\n    seconds\n  } = countdown;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h4\",\n        variant: \"h6\",\n        textAlign: \"center\",\n        children: Object.keys(countdown).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [minutes < 10 && 0, minutes, \":\", seconds < 10 && 0, seconds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tiempo finalizado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CountDown, \"I87gttc+71tAvr03aHXsWb/0jHU=\");\n_c = CountDown;\nexport default CountDown;\nvar _c;\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"names":["React","useState","useEffect","CountDown","targetDate","countdown","setCountdown","calculateCountdown","interval","setInterval","clearInterval","difference","Date","timeLeft","minutes","Math","floor","seconds","display","flexDirection","Object","keys","length"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/session/Countdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CountDown = ({ targetDate }) => {\r\n  const [countdown, setCountdown] = useState(calculateCountdown(targetDate));\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCountdown(calculateCountdown(targetDate));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [targetDate]);\r\n\r\n  function calculateCountdown(targetDate) {\r\n    const difference = +new Date(targetDate) - +new Date();\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60)\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  }\r\n\r\n  const {minutes, seconds } = countdown;\r\n\r\n  return (\r\n    <Box\r\n    sx={{\r\n      display: 'flex',  \r\n      flexDirection: 'column',\r\n    }}\r\n    >\r\n      <div>\r\n        <Typography component=\"h4\" variant=\"h6\" textAlign='center'>\r\n          {Object.keys(countdown).length ? (\r\n            <div>\r\n              <div>{minutes<10 && 0}{minutes}:{seconds<10 && 0}{seconds}</div>\r\n            </div>\r\n          ) : (\r\n            <div>Tiempo finalizado</div>\r\n          )}\r\n        </Typography>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CountDown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,SAAS,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAACM,kBAAkB,CAACH,UAAU,CAAC,CAAC;EAE1EF,SAAS,CAAC,MAAM;IACd,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCH,YAAY,CAACC,kBAAkB,CAACH,UAAU,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,SAASG,kBAAkB,CAACH,UAAU,EAAE;IACtC,MAAMO,UAAU,GAAG,CAAC,IAAIC,IAAI,CAACR,UAAU,CAAC,GAAG,CAAC,IAAIQ,IAAI,EAAE;IACtD,IAAIC,QAAQ,GAAG,CAAC,CAAC;IAEjB,IAAIF,UAAU,GAAG,CAAC,EAAE;MAClBE,QAAQ,GAAG;QACTC,OAAO,EAAEC,IAAI,CAACC,KAAK,CAAEL,UAAU,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;QAClDM,OAAO,EAAEF,IAAI,CAACC,KAAK,CAAEL,UAAU,GAAG,IAAI,GAAI,EAAE;MAC9C,CAAC;IACH;IAEA,OAAOE,QAAQ;EACjB;EAEA,MAAM;IAACC,OAAO;IAAEG;EAAQ,CAAC,GAAGZ,SAAS;EAErC,oBACE,QAAC,GAAG;IACJ,EAAE,EAAE;MACFa,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE;IACjB,CAAE;IAAA,uBAEA;MAAA,uBACE,QAAC,UAAU;QAAC,SAAS,EAAC,IAAI;QAAC,OAAO,EAAC,IAAI;QAAC,SAAS,EAAC,QAAQ;QAAA,UACvDC,MAAM,CAACC,IAAI,CAAChB,SAAS,CAAC,CAACiB,MAAM,gBAC5B;UAAA,uBACE;YAAA,WAAMR,OAAO,GAAC,EAAE,IAAI,CAAC,EAAEA,OAAO,EAAC,GAAC,EAACG,OAAO,GAAC,EAAE,IAAI,CAAC,EAAEA,OAAO;UAAA;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC5D,gBAEN;UAAA,UAAK;QAAiB;UAAA;UAAA;UAAA;QAAA;MACvB;QAAA;QAAA;QAAA;MAAA;IACU;MAAA;MAAA;MAAA;IAAA;EACT;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/CId,SAAS;AAAA,KAATA,SAAS;AAiDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}