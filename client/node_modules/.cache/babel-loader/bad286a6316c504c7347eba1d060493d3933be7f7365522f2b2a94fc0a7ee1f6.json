{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\admin\\\\AdminInterface.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState, useRef } from \"react\";\nimport './AdminInterface.css';\nimport { Session, SessionStatus } from '../../context/Session';\nimport { QuestionStatus } from '../../context/Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminInterface(_ref) {\n  _s();\n  let {\n    questions,\n    sessions\n  } = _ref;\n  const [selectedSession, setSelectedSession] = useState({\n    id: \"\",\n    duration: 0,\n    question_id: \"\",\n    status: \"\"\n  });\n  const sessionRef = useRef(null);\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Joining);\n  const [question, setQuestion] = useState({\n    status: QuestionStatus.Undefined\n  });\n  useEffect(() => {\n    if (sessions) {\n      setSelectedSession(sessions[0]);\n      if (questions) setSelectedSession({\n        ...selectedSession,\n        question_id: questions[0].id\n      });\n    }\n  }, [sessions], [questions]);\n  useEffect(() => {\n    sessionRef.current = new Session(selectedSession.id, 0, controlMessage => {\n      switch (controlMessage.type) {\n        case 'ready':\n          {\n            if (controlMessage.question_id === null) {\n              setQuestion({\n                status: QuestionStatus.Undefined\n              });\n            } else {\n              setQuestion({\n                status: QuestionStatus.Loading,\n                id: controlMessage.question_id\n              });\n            }\n            break;\n          }\n        default:\n          break;\n      }\n    }, (participantId, updateMessage) => {\n      setPeerMagnetPositions(peerPositions => {\n        console.log(peerPositions);\n        return {\n          ...peerPositions,\n          [participantId]: updateMessage.data.position\n        };\n      });\n    });\n  }, [sessionId, participantId]);\n  const handleSessionChange = event => {\n    const sessionId = parseInt(event.target.value);\n    const session = sessions.find(s => s.id === sessionId);\n    session.question_id = selectedSession.question_id;\n    session.duration = selectedSession.duration;\n    setSelectedSession(session);\n  };\n  const handleQuestionChange = event => {\n    setSelectedSession({\n      ...selectedSession,\n      question_id: event.target.value\n    });\n  };\n  const createSession = event => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessionlist\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSessionChange,\n        children: sessions && sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: session.id,\n          children: [\"Session \", session.id]\n        }, session.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessiondetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Valor de sessions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(selectedSession, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: selectedSession && selectedSession.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedSession && selectedSession.duration,\n        onChange: e => setSelectedSession({\n          ...selectedSession,\n          duration: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleQuestionChange,\n        children: questions && questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: question.id,\n          children: question.prompt\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startsession\",\n      onClick: createSession,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminInterface, \"NyBiIMuCBkIDR01fwcbGNlc7wiI=\");\n_c = AdminInterface;\nvar _c;\n$RefreshReg$(_c, \"AdminInterface\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Session","SessionStatus","QuestionStatus","AdminInterface","questions","sessions","selectedSession","setSelectedSession","id","duration","question_id","status","sessionRef","sessionStatus","setSessionStatus","Joining","question","setQuestion","Undefined","current","controlMessage","type","Loading","participantId","updateMessage","setPeerMagnetPositions","peerPositions","console","log","data","position","sessionId","handleSessionChange","event","parseInt","target","value","session","find","s","handleQuestionChange","createSession","map","JSON","stringify","e","prompt"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/admin/AdminInterface.jsx"],"sourcesContent":["import { React, useEffect, useState, useRef } from \"react\";\r\n\r\nimport './AdminInterface.css';\r\nimport { Session, SessionStatus } from '../../context/Session';\r\nimport { QuestionStatus } from '../../context/Question';\r\n\r\nexport default function AdminInterface({ questions, sessions }) {\r\n  const [selectedSession, setSelectedSession] = useState({ id: \"\", duration: 0, question_id: \"\", status: \"\" });\r\n  const sessionRef = useRef(null);\r\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Joining);\r\n  const [question, setQuestion] = useState({ status: QuestionStatus.Undefined });\r\n\r\n  useEffect(() => {\r\n    if(sessions){\r\n      setSelectedSession(sessions[0]);\r\n      if(questions)\r\n        setSelectedSession({ ...selectedSession, question_id: questions[0].id})\r\n    }\r\n  },[sessions],[questions]);\r\n  useEffect(() => {\r\n    sessionRef.current = new Session(selectedSession.id, 0,\r\n      (controlMessage) => {\r\n        switch (controlMessage.type) {\r\n          case 'ready': {\r\n            if (controlMessage.question_id === null) {\r\n              setQuestion({ status: QuestionStatus.Undefined });\r\n            } else {\r\n              setQuestion({\r\n                status: QuestionStatus.Loading,\r\n                id: controlMessage.question_id\r\n              });\r\n            }\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n      },\r\n      (participantId, updateMessage) => {\r\n        setPeerMagnetPositions((peerPositions) => {\r\n          console.log(peerPositions)\r\n          return {\r\n            ...peerPositions,\r\n            [participantId]: updateMessage.data.position\r\n          }\r\n        });\r\n      }\r\n      );\r\n  }, [sessionId, participantId]);\r\n  const handleSessionChange = (event) => {\r\n    const sessionId = parseInt(event.target.value);\r\n    const session = sessions.find(s => s.id === sessionId);\r\n    session.question_id = selectedSession.question_id;\r\n    session.duration = selectedSession.duration;\r\n    setSelectedSession(session);\r\n  }\r\n  const handleQuestionChange = (event) => {\r\n    setSelectedSession({ ...selectedSession, question_id: event.target.value});\r\n  }\r\n  const createSession = (event) => {\r\n      \r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"sessionlist\">\r\n\r\n        <select onChange={handleSessionChange}>\r\n          {sessions && sessions.map(session => (\r\n            <option key={session.id} value={session.id}>Session {session.id}</option>\r\n          ))}\r\n        </select>\r\n        <button>New Session</button>\r\n      </div>\r\n      <div className=\"sessiondetails\">\r\n        <div>\r\n          <p>Valor de sessions:</p>\r\n          <pre>{JSON.stringify(selectedSession, null, 2)}</pre>\r\n        </div>\r\n        <label>Id:</label>\r\n        <input type=\"text\" readOnly value={selectedSession && selectedSession.id} />\r\n        <label>Duration:</label>\r\n        <input type=\"text\" value={selectedSession && selectedSession.duration} onChange={e => setSelectedSession({ ...selectedSession, duration: e.target.value})}/>\r\n        <label>Question:</label>\r\n        <select onChange={handleQuestionChange}>\r\n          {questions && questions.map(question => (\r\n            <option key={question.id} value={question.id}>{question.prompt}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"startsession\" onClick={createSession}>\r\n        <button>Start</button>\r\n        <input type=\"text\" readOnly />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAE1D,OAAO,sBAAsB;AAC7B,SAASC,OAAO,EAAEC,aAAa,QAAQ,uBAAuB;AAC9D,SAASC,cAAc,QAAQ,wBAAwB;AAAC;AAExD,eAAe,SAASC,cAAc,OAA0B;EAAA;EAAA,IAAzB;IAAEC,SAAS;IAAEC;EAAS,CAAC;EAC5D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC;IAAEU,EAAE,EAAE,EAAE;IAAEC,QAAQ,EAAE,CAAC;IAAEC,WAAW,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAC5G,MAAMC,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAACG,aAAa,CAACc,OAAO,CAAC;EACzE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IAAEa,MAAM,EAAET,cAAc,CAACgB;EAAU,CAAC,CAAC;EAE9ErB,SAAS,CAAC,MAAM;IACd,IAAGQ,QAAQ,EAAC;MACVE,kBAAkB,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAGD,SAAS,EACVG,kBAAkB,CAAC;QAAE,GAAGD,eAAe;QAAEI,WAAW,EAAEN,SAAS,CAAC,CAAC,CAAC,CAACI;MAAE,CAAC,CAAC;IAC3E;EACF,CAAC,EAAC,CAACH,QAAQ,CAAC,EAAC,CAACD,SAAS,CAAC,CAAC;EACzBP,SAAS,CAAC,MAAM;IACde,UAAU,CAACO,OAAO,GAAG,IAAInB,OAAO,CAACM,eAAe,CAACE,EAAE,EAAE,CAAC,EACnDY,cAAc,IAAK;MAClB,QAAQA,cAAc,CAACC,IAAI;QACzB,KAAK,OAAO;UAAE;YACZ,IAAID,cAAc,CAACV,WAAW,KAAK,IAAI,EAAE;cACvCO,WAAW,CAAC;gBAAEN,MAAM,EAAET,cAAc,CAACgB;cAAU,CAAC,CAAC;YACnD,CAAC,MAAM;cACLD,WAAW,CAAC;gBACVN,MAAM,EAAET,cAAc,CAACoB,OAAO;gBAC9Bd,EAAE,EAAEY,cAAc,CAACV;cACrB,CAAC,CAAC;YACJ;YACA;UACF;QACA;UAAS;MAAM;IAEnB,CAAC,EACD,CAACa,aAAa,EAAEC,aAAa,KAAK;MAChCC,sBAAsB,CAAEC,aAAa,IAAK;QACxCC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;QAC1B,OAAO;UACL,GAAGA,aAAa;UAChB,CAACH,aAAa,GAAGC,aAAa,CAACK,IAAI,CAACC;QACtC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CACA;EACL,CAAC,EAAE,CAACC,SAAS,EAAER,aAAa,CAAC,CAAC;EAC9B,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMF,SAAS,GAAGG,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IAC9C,MAAMC,OAAO,GAAGhC,QAAQ,CAACiC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/B,EAAE,KAAKuB,SAAS,CAAC;IACtDM,OAAO,CAAC3B,WAAW,GAAGJ,eAAe,CAACI,WAAW;IACjD2B,OAAO,CAAC5B,QAAQ,GAAGH,eAAe,CAACG,QAAQ;IAC3CF,kBAAkB,CAAC8B,OAAO,CAAC;EAC7B,CAAC;EACD,MAAMG,oBAAoB,GAAIP,KAAK,IAAK;IACtC1B,kBAAkB,CAAC;MAAE,GAAGD,eAAe;MAAEI,WAAW,EAAEuB,KAAK,CAACE,MAAM,CAACC;IAAK,CAAC,CAAC;EAC5E,CAAC;EACD,MAAMK,aAAa,GAAIR,KAAK,IAAK,CAEjC,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,aAAa;MAAA,wBAE1B;QAAQ,QAAQ,EAAED,mBAAoB;QAAA,UACnC3B,QAAQ,IAAIA,QAAQ,CAACqC,GAAG,CAACL,OAAO,iBAC/B;UAAyB,KAAK,EAAEA,OAAO,CAAC7B,EAAG;UAAA,WAAC,UAAQ,EAAC6B,OAAO,CAAC7B,EAAE;QAAA,GAAlD6B,OAAO,CAAC7B,EAAE;UAAA;UAAA;UAAA;QAAA,QACxB;MAAC;QAAA;QAAA;QAAA;MAAA,QACK,eACT;QAAA,UAAQ;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAA,wBACE;UAAA,UAAG;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAI,eACzB;UAAA,UAAMmC,IAAI,CAACC,SAAS,CAACtC,eAAe,EAAE,IAAI,EAAE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACjD,eACN;QAAA,UAAO;MAAG;QAAA;QAAA;QAAA;MAAA,QAAQ,eAClB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;QAAC,KAAK,EAAEA,eAAe,IAAIA,eAAe,CAACE;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5E;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEF,eAAe,IAAIA,eAAe,CAACG,QAAS;QAAC,QAAQ,EAAEoC,CAAC,IAAItC,kBAAkB,CAAC;UAAE,GAAGD,eAAe;UAAEG,QAAQ,EAAEoC,CAAC,CAACV,MAAM,CAACC;QAAK,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5J;QAAA,UAAO;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACxB;QAAQ,QAAQ,EAAEI,oBAAqB;QAAA,UACpCpC,SAAS,IAAIA,SAAS,CAACsC,GAAG,CAAC1B,QAAQ,iBAClC;UAA0B,KAAK,EAAEA,QAAQ,CAACR,EAAG;UAAA,UAAEQ,QAAQ,CAAC8B;QAAM,GAAjD9B,QAAQ,CAACR,EAAE;UAAA;UAAA;UAAA;QAAA,QACzB;MAAC;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAC,cAAc;MAAC,OAAO,EAAEiC,aAAc;MAAA,wBACnD;QAAA,UAAQ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACtB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1B;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAxFuBtC,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}