{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans\\\\HANS-Platform\\\\client\\\\src\\\\components\\\\admin\\\\AdminView.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Collapse from '@mui/material/Collapse';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AdminLogin from './AdminLogin.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminView(_ref) {\n  _s();\n  let {} = _ref;\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [sessions, setSessions] = useState({});\n  useEffect(() => {\n    if (status != null) {\n      fetch(`/api/session`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          user: username,\n          pass: password\n        })\n      }).then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            if (!ignore) {\n              setSessions(data);\n            }\n          });\n        } else {\n          res.text().then(msg => console.log(msg));\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(AdminLogin, {\n      username: username,\n      password: password,\n      status: status,\n      onJoinSession: joinSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Valor de sessions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(sessions, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminView, \"7bmD/8w5IS56f5zfkZsgKRnceIU=\");\n_c = AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useState","Button","TextField","Box","Typography","Container","Collapse","Alert","AlertTitle","IconButton","CloseIcon","AdminLogin","AdminView","username","setUsername","password","setPassword","status","setStatus","sessions","setSessions","useEffect","fetch","method","headers","body","JSON","stringify","user","pass","then","res","json","data","ignore","text","msg","console","log","catch","error","joinSession"],"sources":["C:/VISILAB/Hans/HANS-Platform/client/src/components/admin/AdminView.jsx"],"sourcesContent":["import { React, useState } from \"react\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport AdminLogin from './AdminLogin.jsx';\r\n\r\nexport default function AdminView({}) {\r\n  const [username, setUsername] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const [sessions, setSessions] = useState({});\r\n  useEffect(() => {\r\n    if(status!=null){\r\n        fetch(\r\n            `/api/session`,\r\n            {\r\n              method: 'GET',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n              },        \r\n              body: JSON.stringify(\r\n                {user: username, \r\n                pass: password}\r\n                )\r\n            }\r\n          ).then(res => {\r\n            if (res.status === 200) {\r\n              res.json().then(data => {\r\n                if (!ignore) {\r\n                    setSessions(data);\r\n                }\r\n              });\r\n            } else {\r\n              res.text().then(msg => console.log(msg));\r\n            }\r\n          }).catch(error => {\r\n            console.log(error);\r\n          });\r\n    }\r\n  }, [status]);\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <AdminLogin\r\n            username={username}\r\n            password={password}\r\n            status={status}\r\n            onJoinSession={joinSession}\r\n        />\r\n        <div>\r\n            <p>Valor de sessions:</p>\r\n            <pre>{JSON.stringify(sessions, null, 2)}</pre>\r\n        </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,OAAOC,UAAU,MAAM,kBAAkB;AAAC;AAE1C,eAAe,SAASC,SAAS,OAAK;EAAA;EAAA,IAAJ,CAAC,CAAC;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5CqB,SAAS,CAAC,MAAM;IACd,IAAGJ,MAAM,IAAE,IAAI,EAAC;MACZK,KAAK,CACA,cAAa,EACd;QACEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAClB;UAACC,IAAI,EAAEf,QAAQ;UACfgB,IAAI,EAAEd;QAAQ,CAAC;MAEnB,CAAC,CACF,CAACe,IAAI,CAACC,GAAG,IAAI;QACZ,IAAIA,GAAG,CAACd,MAAM,KAAK,GAAG,EAAE;UACtBc,GAAG,CAACC,IAAI,EAAE,CAACF,IAAI,CAACG,IAAI,IAAI;YACtB,IAAI,CAACC,MAAM,EAAE;cACTd,WAAW,CAACa,IAAI,CAAC;YACrB;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLF,GAAG,CAACI,IAAI,EAAE,CAACL,IAAI,CAACM,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC,CAACG,KAAK,CAACC,KAAK,IAAI;QAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB,CAAC,CAAC;IACR;EACF,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EACZ,oBACE,QAAC,SAAS;IAAC,SAAS,EAAC,MAAM;IAAC,QAAQ,EAAC,IAAI;IAAA,wBACrC,QAAC,UAAU;MACP,QAAQ,EAAEJ,QAAS;MACnB,QAAQ,EAAEE,QAAS;MACnB,MAAM,EAAEE,MAAO;MACf,aAAa,EAAEwB;IAAY;MAAA;MAAA;MAAA;IAAA,QAC7B,eACF;MAAA,wBACI;QAAA,UAAG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAI,eACzB;QAAA,UAAMf,IAAI,CAACC,SAAS,CAACR,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEhB;AAAC,GAhDuBP,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}