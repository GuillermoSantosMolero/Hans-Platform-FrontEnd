{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans-Platform-FrontEnd\\\\src\\\\components\\\\admin\\\\AdminInterface.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState, useCallback } from \"react\";\nimport './AdminInterface.css';\nimport { Session } from '../../context/Session';\nimport CountDown from '../session/Countdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminInterface(_ref) {\n  _s();\n  let {\n    username,\n    password,\n    questions,\n    sessions,\n    onSessionCreated\n  } = _ref;\n  const [selectedSession, setSelectedSession] = useState({\n    id: 0,\n    duration: 0,\n    question_id: \"\",\n    status: \"\"\n  });\n  const [participantList, setParticipantList] = useState(null);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [logs, setLogs] = useState([]);\n  const [selectedLog, setSelectedLog] = useState('');\n  const [waitingCountDown, setWaitingCountDown] = useState(false);\n  const [targetDateCountdown, setTargetDateCountdown] = useState('2023-04-01T00:00:00Z');\n  let timerId;\n  useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      setSelectedSession(sessions[0]);\n    }\n  }, [sessions]);\n  useEffect(() => {\n    if (questions && questions.length > 0 && selectedSession) {\n      setSelectedSession(prevSelectedSession => ({\n        ...prevSelectedSession,\n        question_id: questions[0].id\n      }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questions]);\n  const getParticipantsBySession = useCallback(() => {\n    fetch(`/api/session/${selectedSession.id}/allParticipants`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        pass: password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(data => {\n          setParticipantList(data);\n        });\n      } else {\n        res.text().then(msg => console.log(msg));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [selectedSession.id, username, password]);\n  useEffect(() => {\n    if (selectedSession.id !== 0) {\n      getParticipantsBySession();\n      setCurrentSession(new Session(selectedSession.id, 0, controlMessage => {\n        if (controlMessage.participant !== 0) {\n          if (selectedSession.id === Number(controlMessage.session)) {\n            switch (controlMessage.type) {\n              case 'join':\n                console.log(\"case: join\");\n                getParticipantsBySession();\n                break;\n              case 'ready':\n                console.log(\"case: ready\");\n                getParticipantsBySession();\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }));\n    }\n  }, [selectedSession.id, getParticipantsBySession]);\n  const handleSessionChange = event => {\n    const sessionId = parseInt(event.target.value);\n    const session = sessions.find(s => s.id === sessionId);\n    session.question_id = selectedSession.question_id;\n    session.duration = selectedSession.duration;\n    setSelectedSession(session);\n  };\n  const handleQuestionChange = event => {\n    setSelectedSession({\n      ...selectedSession,\n      question_id: event.target.value\n    });\n    currentSession.publishControl({\n      type: 'setup',\n      question_id: event.target.value\n    });\n  };\n  const startSession = event => {\n    currentSession.publishControl({\n      type: 'start',\n      targetDate: Date.now() + selectedSession.duration * 1000\n    });\n    console.log(new Date() + selectedSession.duration + 13);\n    setTargetDateCountdown(Date.now() + selectedSession.duration * 1000);\n    waitOrCloseSession();\n  };\n  const waitOrCloseSession = () => {\n    if (!waitingCountDown) {\n      setWaitingCountDown(true);\n      timerId = setTimeout(() => {\n        currentSession.publishControl({\n          type: 'stop'\n        });\n        setWaitingCountDown(false);\n        setTargetDateCountdown(Date.now());\n      }, selectedSession.duration * 1000);\n    } else {\n      clearTimeout(timerId);\n      currentSession.publishControl({\n        type: 'stop'\n      });\n      setWaitingCountDown(false);\n      setTargetDateCountdown(Date.now());\n    }\n  };\n  const createSession = event => {\n    fetch(`/api/createSession`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        pass: password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(data => {\n          onSessionCreated(data);\n        });\n      } else {\n        res.text().then(msg => console.log(msg));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const downloadFolder = () => {\n    let folderPath = selectedLog;\n    fetch(`/api/downloadLog/${folderPath}`).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      let folder_name = folderPath + \".zip\";\n      link.setAttribute('download', folder_name);\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const downloadAllLogs = () => {\n    fetch(`/api/downloadAllLogs`).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      let folder_name = \"AllLogs.zip\";\n      link.setAttribute('download', folder_name);\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const fetchlogs = async () => {\n    try {\n      const response = await fetch('/api/listLogs');\n      const data = await response.json();\n      setLogs(data.logs);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleLogSelect = event => {\n    const selectedLog = event.target.value;\n    setSelectedLog(selectedLog);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessionlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleSessionChange,\n          children: sessions && sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: session.id,\n            children: [\"Session \", session.id]\n          }, session.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createSession,\n          children: \"New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessiondetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          readOnly: true,\n          value: selectedSession && selectedSession.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedSession ? selectedSession.duration : \"\",\n          onChange: e => setSelectedSession({\n            ...selectedSession,\n            duration: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleQuestionChange,\n          children: questions && questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question.id,\n            children: question.prompt\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startsession\",\n        children: [/*#__PURE__*/_jsxDEV(CountDown, {\n          targetDate: targetDateCountdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSession,\n          children: waitingCountDown ? \"Stop\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startsession\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ready: \", participantList ? participantList.filter(participant => participant.status === 'ready').length : 0, \"/\", participantList ? participantList.length : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"inputParticipant\",\n          readOnly: true,\n          value: participantList ? participantList.map(p => `${p.username} -> ${p.status}`).join(\"\\n\") : \"Sin participantes todavía\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loglist\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"label-log\",\n          children: \"Lista de logs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLog,\n          onChange: handleLogSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this), logs.map(log => {\n            if (log !== \"zips\") {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: log,\n                children: log\n              }, log, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 22\n              }, this);\n            }\n            return null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchlogs,\n          children: \"Obtener logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadFolder,\n          children: \"Descargar log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadAllLogs,\n          children: \"Descargar todos los logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 3\n  }, this);\n}\n_s(AdminInterface, \"KSl3cWmHh8KunQ2z1LO4FqIOIaU=\");\n_c = AdminInterface;\nvar _c;\n$RefreshReg$(_c, \"AdminInterface\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Session","CountDown","AdminInterface","username","password","questions","sessions","onSessionCreated","selectedSession","setSelectedSession","id","duration","question_id","status","participantList","setParticipantList","currentSession","setCurrentSession","logs","setLogs","selectedLog","setSelectedLog","waitingCountDown","setWaitingCountDown","targetDateCountdown","setTargetDateCountdown","timerId","length","prevSelectedSession","getParticipantsBySession","fetch","method","headers","body","JSON","stringify","user","pass","then","res","json","data","text","msg","console","log","catch","error","controlMessage","participant","Number","session","type","handleSessionChange","event","sessionId","parseInt","target","value","find","s","handleQuestionChange","publishControl","startSession","targetDate","Date","now","waitOrCloseSession","setTimeout","clearTimeout","createSession","downloadFolder","folderPath","response","blob","url","window","URL","createObjectURL","link","document","createElement","href","folder_name","setAttribute","appendChild","click","downloadAllLogs","fetchlogs","handleLogSelect","map","e","question","prompt","filter","p","join"],"sources":["C:/VISILAB/Hans-Platform-FrontEnd/src/components/admin/AdminInterface.jsx"],"sourcesContent":["import { React, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport './AdminInterface.css';\r\nimport { Session } from '../../context/Session';\r\nimport CountDown from '../session/Countdown';\r\n\r\nexport default function AdminInterface({ username, password, questions, sessions, onSessionCreated }) {\r\n  const [selectedSession, setSelectedSession] = useState({ id: 0, duration: 0, question_id: \"\", status: \"\" });\r\n  const [participantList, setParticipantList] = useState(null);\r\n  const [currentSession, setCurrentSession] = useState(null);\r\n  const [logs, setLogs] = useState([]);\r\n  const [selectedLog, setSelectedLog] = useState('');\r\n  const [waitingCountDown, setWaitingCountDown] = useState(false);\r\n  const [targetDateCountdown, setTargetDateCountdown] = useState('2023-04-01T00:00:00Z');\r\n  let timerId;\r\n\r\n  useEffect(() => {\r\n    if (sessions && sessions.length > 0) {\r\n      setSelectedSession(sessions[0]);\r\n    }\r\n  }, [sessions]);\r\n\r\n  useEffect(() => {\r\n    if (questions && questions.length > 0 && selectedSession) {\r\n      setSelectedSession((prevSelectedSession) => ({\r\n        ...prevSelectedSession,\r\n        question_id: questions[0].id\r\n      }));\r\n    }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [questions]);\r\n\r\n  const getParticipantsBySession = useCallback(() => {\r\n    fetch(\r\n      `/api/session/${selectedSession.id}/allParticipants`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        )\r\n      }\r\n    ).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(data => {\r\n          setParticipantList(data);\r\n        });\r\n      } else {\r\n        res.text().then(msg => console.log(msg));\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }, [selectedSession.id, username, password]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSession.id !== 0) {\r\n      getParticipantsBySession();\r\n      setCurrentSession(new Session(selectedSession.id, 0, (controlMessage) => {\r\n        if (controlMessage.participant !== 0) {\r\n          if (selectedSession.id === Number(controlMessage.session)) {\r\n            switch (controlMessage.type) {\r\n              case 'join':  \r\n                console.log(\"case: join\");\r\n                getParticipantsBySession();\r\n                break;\r\n              case 'ready':\r\n                console.log(\"case: ready\");\r\n                getParticipantsBySession();\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  }, [selectedSession.id, getParticipantsBySession]);\r\n\r\n  const handleSessionChange = (event) => {\r\n    const sessionId = parseInt(event.target.value);\r\n    const session = sessions.find(s => s.id === sessionId);\r\n    session.question_id = selectedSession.question_id;\r\n    session.duration = selectedSession.duration;\r\n    setSelectedSession(session);\r\n  }\r\n  const handleQuestionChange = (event) => {\r\n    setSelectedSession({ ...selectedSession, question_id: event.target.value });\r\n    currentSession.publishControl({ type: 'setup', question_id: event.target.value });\r\n  }\r\n\r\n  const startSession = (event) => {\r\n    currentSession.publishControl({ type: 'start', targetDate: Date.now() + selectedSession.duration * 1000 });\r\n    console.log(new Date()+selectedSession.duration + 13)\r\n    setTargetDateCountdown((Date.now() + selectedSession.duration * 1000 ))\r\n    waitOrCloseSession();\r\n  }\r\n  const waitOrCloseSession = () => {\r\n    if (!waitingCountDown) {\r\n      setWaitingCountDown(true);\r\n      timerId = setTimeout(() => {\r\n        currentSession.publishControl({ type: 'stop' });\r\n        setWaitingCountDown(false);\r\n        setTargetDateCountdown(Date.now())\r\n      }, selectedSession.duration * 1000);\r\n    } else {\r\n      clearTimeout(timerId);\r\n      currentSession.publishControl({ type: 'stop' });\r\n      setWaitingCountDown(false);\r\n      setTargetDateCountdown(Date.now())\r\n    }\r\n  }\r\n  const createSession = (event) => {\r\n    fetch(\r\n      `/api/createSession`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        )\r\n      }\r\n    ).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(data => {\r\n          onSessionCreated(data);\r\n        });\r\n      } else {\r\n        res.text().then(msg => console.log(msg));\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const downloadFolder = () => {\r\n    let folderPath = selectedLog\r\n    fetch(`/api/downloadLog/${folderPath}`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        let folder_name = folderPath + \".zip\";\r\n        link.setAttribute('download', folder_name);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const downloadAllLogs = () => {\r\n    fetch(`/api/downloadAllLogs`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        let folder_name = \"AllLogs.zip\";\r\n        link.setAttribute('download', folder_name);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchlogs = async () => {\r\n    try {\r\n      const response = await fetch('/api/listLogs');\r\n      const data = await response.json();\r\n      setLogs(data.logs);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleLogSelect = (event) => {\r\n    const selectedLog = event.target.value;\r\n    setSelectedLog(selectedLog);\r\n  };\r\n\r\n  return (\r\n  <div className=\"admin-interface\">\r\n    <div className=\"left-column\">\r\n      <div className=\"sessionlist\">\r\n        <select onChange={handleSessionChange}>\r\n          {sessions && sessions.map(session => (\r\n            <option key={session.id} value={session.id}>Session {session.id}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={createSession}>New Session</button>\r\n      </div>\r\n\r\n      <div className=\"sessiondetails\">\r\n        <label>Id:</label>\r\n        <input type=\"text\" readOnly value={selectedSession && selectedSession.id} />\r\n        <label>Duration:</label>\r\n        <input type=\"text\" value={selectedSession ? selectedSession.duration : \"\"} onChange={e => setSelectedSession({ ...selectedSession, duration: e.target.value })} />\r\n        <label>Question:</label>\r\n        <select onChange={handleQuestionChange}>\r\n          {questions && questions.map(question => (\r\n            <option key={question.id} value={question.id}>{question.prompt}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"startsession\">\r\n        <CountDown targetDate={targetDateCountdown} />\r\n        <button onClick={startSession}>{waitingCountDown ? \"Stop\" : \"Start\"}</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"center-column\">\r\n      <div className=\"startsession\">\r\n        <label>Ready: {participantList ? participantList.filter(participant => participant.status === 'ready').length : 0}/{participantList ? participantList.length : 0}</label>\r\n        <textarea className=\"inputParticipant\" readOnly value={participantList ? participantList.map(p => `${p.username} -> ${p.status}`).join(\"\\n\") : \"Sin participantes todavía\"} />\r\n      </div>\r\n\r\n      <div className=\"loglist\">\r\n      <label id=\"label-log\">Lista de logs:</label>\r\n        <select value={selectedLog} onChange={handleLogSelect}>\r\n          <option value=\"\">Seleccionar log</option>\r\n          {logs.map(log => {\r\n            if (log !== \"zips\") {\r\n              return <option key={log} value={log}>{log}</option>;\r\n            }\r\n            return null;\r\n          })}\r\n        </select>\r\n        <button onClick={fetchlogs}>Obtener logs</button>\r\n        <button onClick={downloadFolder}>Descargar log</button>\r\n        <button onClick={downloadAllLogs}>Descargar todos los logs</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"right-column\">\r\n      {/* Contenido del lateral derecho */}\r\n    </div>\r\n  </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}